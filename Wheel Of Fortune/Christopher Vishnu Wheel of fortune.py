#Christopher Vishnu#Wheel Of Fortuneimport randomfrom graphics import *from time import *def wordlist(newlist):    ####takes a word from the word list and uses it as the hidden and removes it from the list so it can't be repeated####    hidden = random.randint(0, (len(newlist)- 1))    hidden = newlist[hidden]    newlist.remove(hidden)                            return hidden                        def another(again):    ####asks player whether they wanna play or not####    start = Text(Point(475, 375), 'Play Again?')    start.setSize(20)    start.draw(win)    butno = Rectangle(Point(525, 425), Point(625, 475))     butyes = Rectangle(Point(325, 425), Point(425, 475))    butno.setFill('green2')    butyes.setFill('green2')    butno.draw(win)    butyes.draw(win)    messno = Text(Point(375, 450), 'Yes')    messyes = Text(Point(575, 450), 'No')    messno.setSize(25)    messyes.setSize(25)    messno.draw(win)    messyes.draw(win)    face = Circle(Point(675, 300), 50)    eye1 = Circle(Point(655, 290), 10)    eye2 = Circle(Point(695, 290), 10)    smile = Oval(Point(645, 270), Point(705, 330))    cover = Oval(Point(635, 260), Point(715, 325))    cover.setOutline('gray')    cover.setFill('gray')    eye1.setFill('black')    eye2.setFill('black')    face.setWidth(5)    smile.setWidth(5)    mouse = win.getMouse()    ####creates yes and no button the either restarts or exits game when clicked####    while mouse.getX() > 0 and mouse.getX() < 1000 and mouse.getY() > 0 and mouse.getY() < 700:        if mouse.getX() > 525 and mouse.getX() < 625 and mouse.getY() > 425 and mouse.getY() < 475:            messyes.undraw()            messno.undraw()            butyes.undraw()            butno.undraw()            start.undraw()            cls = Rectangle(Point(0,0), Point(1000, 600))            cls.setFill('gray')            cls.draw(win)            mess = Text(Point(425, 300), 'Have a good day')            mess.setSize(36)            smile.draw(win)            cover.draw(win)            mess.draw(win)            face.draw(win)            eye1.draw(win)            eye2.draw(win)            sleep(2)            win.close()        if mouse.getX() > 325 and mouse.getX() < 425 and mouse.getY() > 425 and mouse.getY() < 475:            messyes.undraw()            messno.undraw()            butyes.undraw()            butno.undraw()            start.undraw()            cls = Rectangle(Point(0,0), Point(1000, 600))            cls.setFill('gray')            cls.draw(win)            again.remove('false')            break        mouse = win.getMouse()     if again == []:        exit        def wingame(total, total2, ctotal, v1, vcom, again, practice):    ####prints the winner by comparing the scores####    times = 0    n = 0    cls = Rectangle(Point(0,0), Point(1000, 600))    cls.setFill('gray')    cls.draw(win)    tie = 'false'    ####see who has the higher score####    if v1 == 'false' and vcom == 'false':        highest = total    else:            highest = max(total, total2, ctotal)    ####depending on mode prints score of players and winner####        if v1 == 'true':        messscore = Text(Point(75, 45), 'P1 Score:')        messscore.draw(win)        messscore = Text(Point(830, 45), 'P2 Score:')        messscore.draw(win)        sbucket = Text(Point(60, 65), (total))        sbucket.draw(win)        sbucket = Text(Point(815, 65), (total2))        sbucket.draw(win)        if total == total2:            tie = 'true'        elif vcom == 'true':        messscore = Text(Point(75, 45), 'P1 Score:')        messscore.draw(win)        messscore = Text(Point(830, 45), 'Com Score:')        messscore.draw(win)        sbucket = Text(Point(60, 65), (total))        sbucket.draw(win)        sbucket = Text(Point(815, 65), (ctotal))        sbucket.draw(win)        if total == ctotal:            tie = 'true'    else:       messscore = Text(Point(75, 45), 'P1 Score:')       messscore.draw(win)       sbucket = Text(Point(60, 65), (total))       sbucket.draw(win)       if highest == total and tie != 'true':            winner = 'Player 1 is the'    elif highest == total2 and tie != 'true' and v1 == 'true':        winner = 'Player 2 is the'        n = 755    elif highest == ctotal and tie!= 'true' and vcom == 'true':        winner = 'The Computer is the'        n = 755    elif tie == 'true':        winner = "It's A Tie!!"    champ = Text(Point(477, 200), (winner))    champ.setSize(25)    champ.draw(win)    game = Text(Point(475, 250), 'Winner')    game.setSize(25)    ####puts the faces on specific sides depending on winner and where to put certain faces at all####        if tie != 'true' and practice != 'true':        game.draw(win)        sad = Circle(Point(830 - n, 195), 50)        eye3 = Circle(Point(810 - n, 185), 10)        eye4 = Circle(Point(850 - n, 185), 10)        tear = Circle(Point(850 - n, 185), 5)        tear2 = Polygon(Point(845 - n, 185), Point(855 - n, 185), Point(850 - n, 175))        frown = Oval(Point(800 - n, 215), Point(860 - n, 275))        cover2 = Oval(Point(790 - n, 220), Point(870 - n, 280))        cover2.setOutline('gray')        cover2.setFill('gray')        eye3.setFill('black')        eye4.setFill('black')        tear.setFill('dodger blue')        tear2.setFill('dodger blue')        tear.setOutline('dodger blue')        tear2.setOutline('dodger blue')        sad.setWidth(5)        frown.setWidth(5)        frown.draw(win)        cover2.draw(win)        sad.draw(win)        tear.draw(win)        tear2.draw(win)        eye3.draw(win)        eye4.draw(win)    if tie == 'true' and practice != 'true':        face2 = Circle(Point(75 + 755, 195), 50)        eye5 = Circle(Point(55 + 755, 185), 10)        eye6 = Circle(Point(95 + 755, 185), 10)        smile2 = Oval(Point(45 + 755, 165), Point(105 + 755, 225))        cover3 = Oval(Point(35 + 755, 155), Point(115 + 755, 220))        cover3.setOutline('gray')        cover3.setFill('gray')        eye5.setFill('black')        eye6.setFill('black')        face2.setWidth(5)        smile2.setWidth(5)        smile2.draw(win)        cover3.draw(win)        face2.draw(win)        eye5.draw(win)        eye6.draw(win)    if practice =='true':        game.draw(win)            face = Circle(Point(75 + n, 195), 50)    eye1 = Circle(Point(55 + n, 185), 10)    eye2 = Circle(Point(95 + n, 185), 10)    smile = Oval(Point(45 + n, 165), Point(105 + n, 225))    cover = Oval(Point(35 + n, 155), Point(115 + n, 220))    cover.setOutline('gray')    cover.setFill('gray')    eye1.setFill('black')    eye2.setFill('black')    face.setWidth(5)    smile.setWidth(5)    smile.draw(win)    cover.draw(win)    face.draw(win)    eye1.draw(win)    eye2.draw(win)    ####makes the smiley face go up and down and the sad face cry####    for i in range(0, 30):        times = times + 1        if times > 5 and times < 10 or times > 15 and times < 20 or times > 25 and times < 31:            if i == 17 and tie != 'true' and practice != 'true':                tear.move(0,-24)                tear2.move(0,-24)            elif tie == 'true':                smile2.move(0,2)                cover3.move(0,2)                face2.move(0,2)                eye5.move(0,2)                eye6.move(0,2)            smile.move(0,2)            cover.move(0,2)            face.move(0,2)            eye1.move(0,2)            eye2.move(0,2)        else:            if tie == 'true':                smile2.move(0,-2)                cover3.move(0,-2)                face2.move(0,-2)                eye5.move(0,-2)                eye6.move(0,-2)                            smile.move(0,-2)            cover.move(0,-2)            face.move(0,-2)            eye1.move(0,-2)            eye2.move(0,-2)            if i >= 10 and i <= 15 and tie != 'true' and practice != 'true' or i >= 24 and tie != 'true' and practice != 'true':                tear.move(0,.25)                tear2.move(0,.25)            elif i < 10 and tie != 'true' and practice != 'true' or i > 15 and i < 24 and tie != 'true' and practice != 'true':                tear.move(0,4)                tear2.move(0,4)        sleep(.3)    another(again)    if again == []:        exit        def allguessed(guessed, total, total2, ctotal, cturn, p2turn, hidden, v1, vcom, again, practice):    ####checks if you completed the word when you guess a letter####    if guessed in left:        left.remove(guessed)    if left == []:        right = Text(Point(500, 50), 'You completed the word!!')        right.setSize(15)        right.draw(win)        sleep(1)        if cturn == 'true':            ctotal = ctotal + 300            wingame(total, total2, ctotal, v1, vcom, again, practice)        elif p2turn == 'true':            total2 = total2 + 300            wingame(total, total2, ctotal, v1, vcom, again, practice)        else:            total = total + 300            wingame(total, total2, ctotal, v1,vcom, again, practice)        if again == []:            exit    else:        if cturn == 'true':            return ctotal        elif p2turn == 'true':            return total2        else:            return total            def checkword(word, total, total2, p2turn, left, v1, vcom, again, practice):    ####checks the guessword to see if you got it right or not####    guess = ''    for i in word:        guess = guess + i        if guess == hidden:        right = Text(Point(500, 50), 'Your guess is correct!!')        right.setSize(15)        right.draw(win)        sleep(1)        if p2turn == 'true':            total2 = total2 + 500 + (150 * (len(left)))                                else:            total = total + 500 + (150 * (len(left)))        wingame(total, total2, ctotal, v1, vcom, again, practice)        if again == []:            exit    if guess != hidden:        cover = Rectangle(Point(5, 230), Point(700, 270))        cover.setFill('gray')        cover.setOutline('gray')        wrong = Text(Point(500, 50), 'Guessed word is wrong')        wrong.draw(win)        sleep(1.5)        cover.draw(win)        wrong.undraw()        fail = 'true'        butword = Rectangle(Point(25, 180), Point(125, 210))            butword.setFill('seagreen2')        butword.draw(win)        messword = Text(Point(75, 195), 'Guess Word')        messword.draw(win)        return fail                    def placement(word):    ####places the correct letters for the guessword####    i = (len(word)) -1     correct = Text(Point(25 + (35 * i), 245), (word[i]))    correct.draw(win)            def score(correct, total, ctotal, cturn, total2, p2turn):    ####prints and calculates the score for the players####    if cturn == 'true' or p2turn == 'true':        n = 100    else:        n = 0    cover = Rectangle(Point(5, 310 + n), Point(60, 330 + n))    cover.setFill('gray')    cover.setOutline('gray')    cover.draw(win)    if correct == 'true':        if cturn == 'true':            ctotal = ctotal + 100            sbucket = Text(Point(30, 320 + n), (ctotal))            elif p2turn == 'true':            total2 = total2 + 100            sbucket = Text(Point(30, 320 + n), (total2))                    else:            total = total + 100            sbucket = Text(Point(30, 320 + n), (total))                elif correct == 'false':        if cturn == 'true':            ctotal = ctotal - 50            sbucket = Text(Point(30, 320 + n), (ctotal))                    elif p2turn == 'true':            total2 = total2 - 50            sbucket = Text(Point(30, 320 + n), (total2))                    else:                          total = total - 50            sbucket = Text(Point(30, 320 + n), (total))                sbucket.draw(win)    if cturn == 'true':        return ctotal    elif p2turn == 'true':        return total2    else:        return totaldef guessword(total,total2, p2turn, v1, again, vcom, practice):    ####let's you enter your guess of what the hidden word is####    word = []    butdone = Rectangle(Point(25, 180), Point(125, 210))    butdone.setFill('seagreen2')    butdone.draw(win)    messdone = Text(Point(75, 195), 'Done Guess')    messdone.draw(win)    ####puts blanks for the guess word####    for i in range(0,len(hidden)):                blanks = Text(Point(25 + (35 * i),250), ('___'))        blanks.draw(win)     mouse = win.getMouse()    while mouse.getX() > 0 and mouse.getX() < 1000 and mouse.getY() > 0 and mouse.getY() < 700:        guessed = ''        if mouse.getX() > 25 and mouse.getX() < 50 and mouse.getY() > 25 and mouse.getY() < 50:            guessed = 'a'        if mouse.getX() > 55 and mouse.getX() < 80 and mouse.getY() > 25 and mouse.getY() < 50:            guessed = 'b'        if mouse.getX() > 85 and mouse.getX() < 110 and mouse.getY() > 25 and mouse.getY() < 50:            guessed = 'c'        if mouse.getX() > 115 and mouse.getX() < 140 and mouse.getY() > 25 and mouse.getY() < 50:            guessed = 'd'        if mouse.getX() > 145 and mouse.getX() < 170 and mouse.getY() > 25 and mouse.getY() < 50:            guessed = 'e'        if mouse.getX() > 175 and mouse.getX() < 200 and mouse.getY() > 25 and mouse.getY() < 50:            guessed = 'f'        if mouse.getX() > 205 and mouse.getX() < 230 and mouse.getY() > 25 and mouse.getY() < 50:            guessed = 'g'        if mouse.getX() > 235 and mouse.getX() < 260 and mouse.getY() > 25 and mouse.getY() < 50:            guessed = 'h'        if mouse.getX() > 265 and mouse.getX() < 290 and mouse.getY() > 25 and mouse.getY() < 50:            guessed = 'i'        if mouse.getX() > 295 and mouse.getX() < 320 and mouse.getY() > 25 and mouse.getY() < 50:            guessed = 'j'        if mouse.getX() > 25 and mouse.getX() < 50 and mouse.getY() > 75 and mouse.getY() < 100:            guessed = 'k'        if mouse.getX() > 55 and mouse.getX() < 80 and mouse.getY() > 75 and mouse.getY() < 100:            guessed = 'l'        if mouse.getX() > 85 and mouse.getX() < 110 and mouse.getY() > 75 and mouse.getY() < 100:            guessed = 'm'        if mouse.getX() > 115 and mouse.getX() < 140 and mouse.getY() > 75 and mouse.getY() < 100:            guessed = 'n'        if mouse.getX() > 145 and mouse.getX() < 170 and mouse.getY() > 75 and mouse.getY() < 100:            guessed = 'o'        if mouse.getX() > 175 and mouse.getX() < 200 and mouse.getY() > 75 and mouse.getY() < 100:            guessed = 'p'        if mouse.getX() > 205 and mouse.getX() < 230 and mouse.getY() > 75 and mouse.getY() < 100:            guessed = 'q'        if mouse.getX() > 235 and mouse.getX() < 260 and mouse.getY() > 75 and mouse.getY() < 100:            guessed = 'r'        if mouse.getX() > 265 and mouse.getX() < 290 and mouse.getY() > 75 and mouse.getY() < 100:            guessed = 's'        if mouse.getX() > 295 and mouse.getX() < 320 and mouse.getY() > 75 and mouse.getY() < 100:            guessed = 't'        if mouse.getX() > 25 and mouse.getX() < 50 and mouse.getY() > 125 and mouse.getY() < 150:            guessed = 'u'        if mouse.getX() > 55 and mouse.getX() < 80 and mouse.getY() > 125 and mouse.getY() < 150:            guessed = 'v'        if mouse.getX() > 85 and mouse.getX() < 110 and mouse.getY() > 125 and mouse.getY() < 150:            guessed = 'w'        if mouse.getX() > 115 and mouse.getX() < 140 and mouse.getY() > 125 and mouse.getY() < 150:            guessed = 'x'        if mouse.getX() > 145 and mouse.getX() < 170 and mouse.getY() > 125 and mouse.getY() < 150:            guessed = 'y'        if mouse.getX() > 175 and mouse.getX() < 200 and mouse.getY() > 125 and mouse.getY() < 150:            guessed = 'z'        if guessed != '':            word = word + [guessed]            placement(word)        if mouse.getX() > 25 and mouse.getX() < 125 and mouse.getY() > 180 and mouse.getY() < 210:            ####checks to see if the guess word is the correct word####            fail = checkword(word, total, total2, p2turn, left, v1, vcom, again, practice)            if again == []:                break            ####if it's not your score gets set back to zero####            if  fail == 'true':                correct = 'false'                                    if p2turn == 'true':                    total2 = 50                    total2 = score(correct, total, ctotal, cturn, total2, p2turn)                else:                    total = 50                    total = score(correct, total, ctotal, cturn, total2, p2turn)                if p2turn == 'true':                    return total2                else:                    return total        ####if word is too long it puts up a message an gets rid of all your score####                if len(word) > len(hidden):            wrong = Text(Point(500, 50), 'Guessed word too long, you are wrong')            wrong.draw(win)            sleep(1.5)            cover = Rectangle(Point(5, 230), Point(700, 270))            cover.setFill('gray')            cover.setOutline('gray')            cover.draw(win)            wrong.undraw()            butword = Rectangle(Point(25, 180), Point(125, 210))                butword.setFill('seagreen2')            butword.draw(win)            messword = Text(Point(75, 195), 'Guess Word')            messword.draw(win)            correct = 'false'            ####puts score at 50 then goes into score and says incorrect making you lose 50 to make you have zero####            if p2turn == 'true':                total2 = 50                total2 = score(correct, total, ctotal, cturn, total2, p2turn)                return total2            else:                total = 50                total = score(correct, total, ctotal, cturn, total2, p2turn)                return total            mouse = win.getMouse()    if again == []:                exitdef checkscore(total,total2, p2turn, v1, again, vcom, practice):    ####checks to see if you have a positive score to guessword####    ####puts up a message if they don't meet the requirement####    if p2turn == 'true':        if total2 > 0:            total2 = guessword(total, total2, p2turn, v1, again, vcom, practice)            if again == []:                exit            return total2            else:            lack = Text(Point(500,50), 'You require a positive score to guess a word')            lack.draw(win)            sleep(2)            lack.undraw()            return total2                else:                if total > 0:            total = guessword(total, total2, p2turn, v1, again, vcom, practice)            if again == []:                exit            return total        else:            lack = Text(Point(500,50), 'You require a positive score to guess a word')            lack.draw(win)            sleep(2)            lack.undraw()            return totaldef guessletter(guessed, total, ctotal, allalpha, total2, cturn, p2turn, v1, vcom, again, practice):    ####checks to see if guessed letter is correct and finds placement of letter####    there = 'false'    correct = ''    found = 0    ####checks if word was in the hidden####    for i in range(0,len(hidden)):        if guessed == hidden[i]:            found = found + 1            correct = Text(Point(400 + (35 * i), 345), (guessed))            correct.draw(win)            there = 'true'            correct = 'true'        ####finds the positionning of where to print the already guessed and incorrect words####            if i == (len(hidden)) - 1 and there != 'true':            correct = 'false'                        position = (ord(guessed)) - 96            wrong = Text(Point(735 + (15 * position), 140), (guessed))            if position > 10 and position <= 20:                position = position - 10                wrong = Text(Point(735 + (15 * position),160), (guessed))            if position > 20:                position = position - 20                wrong = Text(Point(735 + (15 * position), 180), (guessed))            wrong.draw(win)        if i == (len(hidden)) - 1:            position = (ord(guessed)) - 96            letter = Text(Point(735 + (15 * position), 45), (guessed))            if position > 10 and position <= 20:                position = position - 10                letter = Text(Point(735 + (15 * position),65), (guessed))            if position > 20:                position = position - 20                letter = Text(Point(735 + (15 * position), 85), (guessed))            letter.draw(win)            ####if letter was found more then once in word gives you points equal to how many times the letter was there####            ####removes the letter the number of times it was in the word from left list####            if found > 1:                for i in range(0, found):                    if cturn == 'true':                        ctotal = score(correct, total, ctotal, cturn, total2, p2turn)                    elif p2turn == 'true':                        total2 = score(correct, total, ctotal, cturn, total2, p2turn)                    else:                        total = score(correct, total, ctotal, cturn, total2, p2turn)                    if cturn == 'true':                        ctotal = allguessed(guessed, total, total2, ctotal, cturn, p2turn, hidden, v1, vcom, again, practice)                    elif p2turn == 'true':                        total2 = allguessed(guessed, total, total2, ctotal, cturn, p2turn, hidden, v1, vcom, again, practice)                    else:                        total = allguessed(guessed, total, total2, ctotal, cturn, p2turn, hidden, v1, vcom, again, practice)            else:                if cturn == 'true':                    ctotal = score(correct, total, ctotal, cturn, total2, p2turn)                elif p2turn == 'true':                    total2 = score(correct, total, ctotal, cturn, total2, p2turn)                else:                    total = score(correct, total, ctotal, cturn, total2, p2turn)                if cturn == 'true':                    ctotal = allguessed(guessed, total, total2, ctotal, cturn, p2turn, hidden, v1, vcom, again, practice)                elif p2turn == 'true':                    total2 = allguessed(guessed, total, total2, ctotal, cturn, p2turn, hidden, v1, vcom, again, practice)                else:                    total = allguessed(guessed, total, total2, ctotal, cturn, p2turn, hidden, v1, vcom, again, practice)                    if again == []:        exit    if cturn == 'true':        return ctotal    elif p2turn == 'true':        return total2    else:        return totaldef compick(ctotal, cturn, vcom, again, total, allalpha):    ####the computer picks a letter####    correct = 'false'    cover = Rectangle(Point(400, 5), Point(700, 40))    cover.setOutline('gray')    cover.setFill('gray')    cover.draw(win)    messturn = Text(Point(500, 25), 'Computer Turn')    messturn.draw(win)    sleep(.9)    guessed = random.randint(0, (len(allalpha) - 1))    guessed = allalpha[guessed]    ctotal = guessletter(guessed,total, ctotal, allalpha, total2, cturn, p2turn, v1, vcom, again, practice)          allalpha.remove(guessed)    correct = 'true'    if again == []:        exit    return ctotal  def alreadychosen(guessed, allalpha, total, ctotal, total2, allguess, p2turn, v1, again, vcom, practice):    ####checks if the letter that was picked has already been picked or not####    correct = 'false'    for i in allalpha:        if i == guessed:            if p2turn == 'true':                total2 = guessletter(guessed, total,ctotal, allalpha, total2, cturn, p2turn, v1, vcom, again, practice)            else:                    total = guessletter(guessed,total, ctotal, allalpha, total2, cturn, p2turn, v1, vcom, again, practice)            if again == []:                    exit            allalpha.remove(guessed)            correct = 'true'            if p2turn == 'true':                return total2            else:                return total        ####puts up an invalid message if letter was already guessed####            if i == allalpha[(len(allalpha)-1)] and correct == 'false':            invalid = Text(Point(500,50), 'Already guessed, guess again')            invalid.draw(win)            sleep(.9)            invalid.undraw()             if p2turn == 'true':                return total2            else:                return total            def pick(total, allalpha, ctotal, practice, v1, vcom, total2, p2turn, cturn, pretotal, pretotal2, again):    ####checks if your picking a letter for your turn or guessing the word####    ####also manages the turns####    allguess = []    count = 0    game = 'true'    while game == 'true':        if v1 == 'true':            count = count + 1            if count%2 == 0:                p2turn = 'true'                cover = Rectangle(Point(400, 5), Point(700, 40))                cover.setOutline('gray')                cover.setFill('gray')                cover.draw(win)                messturn = Text(Point(500, 25), 'Player 2 Turn')                messturn.draw(win)            elif count%2 != 0 and count != 1:                p2turn = 'false'                cover = Rectangle(Point(400, 5), Point(700, 40))                cover.setOutline('gray')                cover.setFill('gray')                cover.draw(win)                messturn = Text(Point(500, 25), 'Player 1 Turn')                messturn.draw(win)        mouse = win.getMouse()                guessed = ''        if mouse.getX() > 25 and mouse.getX() < 50 and mouse.getY() > 25 and mouse.getY() < 50:            guessed = 'a'          if mouse.getX() > 55 and mouse.getX() < 80 and mouse.getY() > 25 and mouse.getY() < 50:            guessed = 'b'        if mouse.getX() > 85 and mouse.getX() < 110 and mouse.getY() > 25 and mouse.getY() < 50:            guessed = 'c'        if mouse.getX() > 115 and mouse.getX() < 140 and mouse.getY() > 25 and mouse.getY() < 50:            guessed = 'd'        if mouse.getX() > 145 and mouse.getX() < 170 and mouse.getY() > 25 and mouse.getY() < 50:            guessed = 'e'        if mouse.getX() > 175 and mouse.getX() < 200 and mouse.getY() > 25 and mouse.getY() < 50:            guessed = 'f'        if mouse.getX() > 205 and mouse.getX() < 230 and mouse.getY() > 25 and mouse.getY() < 50:            guessed = 'g'        if mouse.getX() > 235 and mouse.getX() < 260 and mouse.getY() > 25 and mouse.getY() < 50:            guessed = 'h'        if mouse.getX() > 265 and mouse.getX() < 290 and mouse.getY() > 25 and mouse.getY() < 50:            guessed = 'i'        if mouse.getX() > 295 and mouse.getX() < 320 and mouse.getY() > 25 and mouse.getY() < 50:            guessed = 'j'        if mouse.getX() > 25 and mouse.getX() < 50 and mouse.getY() > 75 and mouse.getY() < 100:            guessed = 'k'        if mouse.getX() > 55 and mouse.getX() < 80 and mouse.getY() > 75 and mouse.getY() < 100:            guessed = 'l'        if mouse.getX() > 85 and mouse.getX() < 110 and mouse.getY() > 75 and mouse.getY() < 100:            guessed = 'm'        if mouse.getX() > 115 and mouse.getX() < 140 and mouse.getY() > 75 and mouse.getY() < 100:            guessed = 'n'        if mouse.getX() > 145 and mouse.getX() < 170 and mouse.getY() > 75 and mouse.getY() < 100:            guessed = 'o'        if mouse.getX() > 175 and mouse.getX() < 200 and mouse.getY() > 75 and mouse.getY() < 100:            guessed = 'p'        if mouse.getX() > 205 and mouse.getX() < 230 and mouse.getY() > 75 and mouse.getY() < 100:            guessed = 'q'        if mouse.getX() > 235 and mouse.getX() < 260 and mouse.getY() > 75 and mouse.getY() < 100:            guessed = 'r'        if mouse.getX() > 265 and mouse.getX() < 290 and mouse.getY() > 75 and mouse.getY() < 100:            guessed = 's'        if mouse.getX() > 295 and mouse.getX() < 320 and mouse.getY() > 75 and mouse.getY() < 100:            guessed = 't'        if mouse.getX() > 25 and mouse.getX() < 50 and mouse.getY() > 125 and mouse.getY() < 150:            guessed = 'u'        if mouse.getX() > 55 and mouse.getX() < 80 and mouse.getY() > 125 and mouse.getY() < 150:            guessed = 'v'        if mouse.getX() > 85 and mouse.getX() < 110 and mouse.getY() > 125 and mouse.getY() < 150:            guessed = 'w'        if mouse.getX() > 115 and mouse.getX() < 140 and mouse.getY() > 125 and mouse.getY() < 150:            guessed = 'x'        if mouse.getX() > 145 and mouse.getX() < 170 and mouse.getY() > 125 and mouse.getY() < 150:            guessed = 'y'        if mouse.getX() > 175 and mouse.getX() < 200 and mouse.getY() > 125 and mouse.getY() < 150:            guessed = 'z'        if mouse.getX() > 25 and mouse.getX() < 125 and mouse.getY() > 180 and mouse.getY() < 210:            ####guessword button####            if p2turn == 'true':                total2 =  checkscore(total, total2, p2turn, v1, again, vcom, practice)            else:                    total = checkscore(total, total2, p2turn, v1, again, vcom, practice)            if again == []:                break        ####adds guessed letters to a list of guessed letter so that they can't repeat the same letter twice####            elif guessed != '':            allguess = allguess + [guessed]            if p2turn == 'true':                total2 = alreadychosen(guessed, allalpha, total, ctotal, total2, allguess, p2turn, v1, again, vcom, practice)            else:                total = alreadychosen(guessed, allalpha, total, ctotal, total2, allguess, p2turn, v1, again, vcom, practice)            if again == []:                break        ####doesn't switch turns if you click an already used letter####            if v1 == 'true':            if pretotal == total and p2turn != 'true':                count = count - 1            elif pretotal2 == total2 and p2turn == 'true':                count = count - 1        if vcom == 'true':            cturn = 'true'            if pretotal == total:                cturn = 'false'        pretotal = total        pretotal2 = total2        ####for computers turn####        if cturn == 'true' and vcom == 'true':            ctotal = compick(ctotal, cturn, vcom, again, total, allalpha)            cturn = 'false'            cover = Rectangle(Point(400, 5), Point(700, 40))            cover.setOutline('gray')            cover.setFill('gray')            cover.draw(win)            messturn = Text(Point(500, 25), 'Player 1 Turn')            messturn.draw(win)      if again == []:        exitdef Board(missed, correct, hidden, practice, v1, vcom, again):    ####sets up the games board####    ####prints the letters that you can choose from####    for i in range (0,26):        alpha  = Rectangle(Point(25 + (30 * i),25), Point(50+ (30 * i), 50))        if i >= 10 and i < 20:            i = i - 10            alpha = Rectangle(Point(25 + (30 * i),75), Point(50+ (30 * i), 100))        if i >= 20:            i = i - 20            alpha = Rectangle(Point(25 + (30 * i), 125), Point(50 + (30 * i), 150))        alpha.setFill('deepskyblue')        alpha.draw(win)    for i in range (0, 26):        letter = 97 + i        letter = chr(letter)        letters  = Text(Point(35 + (30 * i),38),letter)        if i >= 10 and i < 20:            i = i - 10            letters = Text(Point(35 + (30 * i),88),letter)        if i >= 20:            i = i - 20            letters = Text(Point(35 + (30 * i), 138), letter)        letters.draw(win)    ####prints the blanks for the hidden word####    for i in range(0,len(hidden)):                blanks = Text(Point(400 + (35 * i),350), ('___'))        blanks.draw(win)    ####prints the score, guessed letters and incorrect letter titles####        messguess = Text(Point(800, 25), 'Guessed Letters:')    messguess.draw(win)    messincorrect = Text(Point(800, 120), 'Incorrect Letters:')    messincorrect.draw(win)    butword = Rectangle(Point(25, 180), Point(125, 210))    butword.setFill('seagreen2')    butword.draw(win)    messword = Text(Point(75, 195), 'Guess Word')    messword.draw(win)    ####depending on mode sets up board differently3####    if practice == 'true':        mess = Text(Point(500, 25), 'Pick a letter')        mess.draw(win)        messscore = Text(Point(45, 300), 'Score:')        messscore.draw(win)        sbucket = Text(Point(30, 320), (0))        sbucket.draw(win)    elif v1 == 'true':        messturn = Text(Point(500, 25), 'Player 1')        messturn.draw(win)        mess = Text(Point(600, 25), 'Pick a letter')        mess.draw(win)        messscore1 = Text(Point(45, 300), 'P1 Score:')        messscore1.draw(win)        messscore2 = Text(Point(45, 400), 'P2 Score:')        messscore2.draw(win)        sbucket1 = Text(Point(30, 320), (0))        sbucket1.draw(win)        sbucket2 = Text(Point(30, 420), (0))        sbucket2.draw(win)    elif vcom == 'true':        messturn = Text(Point(500, 25), 'Player 1')        messturn.draw(win)        mess = Text(Point(600, 25), 'Pick a letter')        mess.draw(win)        messscore1 = Text(Point(60, 300), 'P1 Score:')        messscore1.draw(win)        messscore2 = Text(Point(70, 400), 'Com. Score:')        messscore2.draw(win)        sbucket1 = Text(Point(30, 320), (0))        sbucket1.draw(win)        sbucket2 = Text(Point(30, 420), (0))        sbucket2.draw(win)    pick(total, allalpha, ctotal, practice, v1, vcom, total2, p2turn, cturn, pretotal, pretotal2, again)    if again == []:        exit    def mode(vcom, v1, practice, again):    ####amkes the titles and the options####    title = Text(Point(500, 100), 'Wheel Of Fortune')    title.setSize(36)    title.draw(win)    butcpu = Rectangle(Point(225, 325), Point(375, 375))    messcpu = Text(Point(300, 350), '1 vs Com')    butmono = Rectangle(Point(450, 325), Point(550, 375))    messmono = Text(Point(500, 350), '1 vs 1')        butprac = Rectangle(Point(625, 325), Point(775, 375))    messprac = Text(Point(700, 350), 'Practice')    butinst = Rectangle(Point(410, 400), Point(590, 450))     messinst = Text(Point(500, 425), 'Instructions')                    butcpu.setFill('magenta3')    butmono.setFill('cyan2')    butprac.setFill('salmon2')    butinst.setFill('seagreen1')    messcpu.setSize(25)    messmono.setSize(25)    messprac.setSize(25)    messinst.setSize(25)                    butcpu.draw(win)    butmono.draw(win)    butprac.draw(win)    butinst.draw(win)    messcpu.draw(win)    messmono.draw(win)    messprac.draw(win)    messinst.draw(win)                    ask = Text(Point(500, 275), 'Mode?')    ask.setSize(25)    ask.draw(win)        mouse = win.getMouse()    ####checks what mode they would like to play####    while mouse.getX() > 0 and mouse.getX() < 1000 and mouse.getY() > 0 and mouse.getY() < 600:        if mouse.getX() > 225 and mouse.getX() < 375 and mouse.getY() > 325 and mouse.getY() < 375:            title.undraw()            butmono.undraw()            butcpu.undraw()            butprac.undraw()            messmono.undraw()            messcpu.undraw()            messprac.undraw()            butinst.undraw()            messinst.undraw()            ask.undraw()            vcom = 'true'            Board(missed, correct, hidden, practice, v1, vcom, again)        if mouse.getX() > 450 and mouse.getX() < 550 and mouse.getY() > 325 and mouse.getY() < 375:            title.undraw()            butmono.undraw()            butcpu.undraw()            butprac.undraw()            messmono.undraw()            messcpu.undraw()            messprac.undraw()            butinst.undraw()            messinst.undraw()            ask.undraw()            v1 = 'true'            Board(missed, correct, hidden, practice, v1, vcom, again)        if mouse.getX() > 625 and mouse.getX() < 775 and mouse.getY() > 325 and mouse.getY() < 375:            title.undraw()            butmono.undraw()            butcpu.undraw()            butprac.undraw()            messmono.undraw()            messcpu.undraw()            messprac.undraw()            butinst.undraw()            messinst.undraw()            ask.undraw()            practice = 'true'            Board(missed, correct, hidden, practice, v1, vcom, again)        if mouse.getX() > 410 and mouse.getX() < 590 and mouse.getY() > 400 and mouse.getY() < 450:            cls = Rectangle(Point(0,0), Point(1000, 600))            cls.setFill('gray')            cls.draw(win)            butback = Rectangle(Point(430, 450), Point(530, 500))             messback = Text(Point(480, 475), 'Back')            butback.setFill('firebrick1')            messback.setSize(25)            butback.draw(win)            messback.draw(win)            inst1 = Text(Point(500,25),'Instructions:')            inst1.setSize(20)            inst2 = Text(Point(200,70),'You can guess a letter or guess the word each turn.')            inst3 = Text(Point(377,100),'You guess a letter using the alphabet keys on game and you guess a word using the guessword button.')                        inst4 = Text(Point(308,130),'Once you press guessword you use the alphabet keys on game to type your guess.')            inst5 = Text(Point(257,160),'When you have finished typing the word click the done guess button.')            inst6 = Text(Point(177,190),'You get 100 points for a correct letter guess.')            inst7 = Text(Point(200,220),'And you lose 50 points for an incorrect letter guess.')            inst8 = Text(Point(183,250),'To guess a word you require a score above 0.')                          inst9 = Text(Point(338,280),'If you guess the last letter in the word you get the points for the correct letter and 300 points.')            inst10 = Text(Point(472,310),'If you use guess word and get it right you get 300 points plus 150 points for each extra letter that was not already found in the word.')            inst11 = Text(Point(250,340),'But if you use guess word and get it wrong you lose all your points.')            inst12 = Text(Point(355,370),'Once the word is completed the scores are compared and the player with the highest score wins.')                                   inst1.draw(win)            inst2.draw(win)            inst3.draw(win)            inst4.draw(win)            inst5.draw(win)            inst6.draw(win)            inst7.draw(win)            inst8.draw(win)            inst9.draw(win)            inst10.draw(win)            inst11.draw(win)            inst12.draw(win)            mouse = win.getMouse()            while mouse.getX() > 0 and mouse.getX() < 1000 and mouse.getY() > 0 and mouse.getY() < 600:                if mouse.getX() > 430 and mouse.getX() < 530 and mouse.getY() > 450 and mouse.getY() < 500:                    messback.undraw()                    butback.undraw()                    inst1.undraw()                    inst2.undraw()                    inst3.undraw()                    inst4.undraw()                    inst5.undraw()                    inst6.undraw()                                        inst7.undraw()                    inst8.undraw()                    inst9.undraw()                    inst10.undraw()                    inst11.undraw()                    inst12.undraw()                    cls.undraw()                    break        if again == []:            break         mouse = win.getMouse()    if again == []:        exitgameover = 'false'win = GraphWin('Wheel Of Fortune', 1000, 600)win.setBackground('gray')newlist = 'kingshark grodd killercroc silversurfer redskull trigon deadshot scarecrow blackmanta penguin lex heatwave blackout subzero nightcrawler abomination odin robin rhino greengoblin lizard sabertooth storm sandman piedpiper magneto mistique supergirl ironfist whiplash flash superman batman atom arrow ironman hawkeye falcon blackpanther warmachine ironmonger ironpatriot daredevil starlord drax rocket groot aquaman spiderman wonderwoman doomsday joker deathstroke zoom catwoman nightwing cyborg raven zatanna greenlantern batgirl hawkgirl lobo grundy zod scorpion ares sinestro bane shazam quicksilver thor hulk ultron wolverine cyclops colossus blackwidow darkseid thanos deadpool loki doctordoom vision fury thing venom antman rogue beast catwoman'.split()####gets game to restart unless told not to####while gameover == 'false':    ####sets everything to orginals####    total = 0    ctotal = 0    total2 = 0    pretotal = 0    pretotal2 = 0    cturn =''    p2turn = ''    allguess = []    left = []    v1 = 'false'    vcom = 'false'    practice = 'false'    allalpha = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']    missed = ''            correct = ''    again = ['false']    ####get hidden word####    hidden = wordlist(newlist)    ####makes list left to see what letter are missing so if guessed player wins####    for i in hidden:        left = left + [i]    ####main program####        mode(vcom, v1, practice, again)    ###if all possible words are used and removed from list, puts up message telling you to re - run game and closes window###     if newlist == []:        none = Text(Point(425, 250), 'No more words in word bank')        restart = Text(Point(425, 300), 'To play again re-run the game')        restart.setSize(25)        restart.draw(win)        mess = Text(Point(425, 350), 'Have a good day')        mess.setSize(36)        face = Circle(Point(685, 350), 50)        eye1 = Circle(Point(665, 340), 10)        eye2 = Circle(Point(705, 340), 10)        smile = Oval(Point(655, 320), Point(715, 380))        cover = Oval(Point(645, 310), Point(725, 375))        cover.setOutline('gray')        cover.setFill('gray')        eye1.setFill('black')        eye2.setFill('black')        face.setWidth(5)        smile.setWidth(5)        smile.draw(win)        cover.draw(win)        mess.draw(win)        face.draw(win)        eye1.draw(win)        eye2.draw(win)        none.setSize(25)        none.draw(win)        sleep(3)        win.close()    